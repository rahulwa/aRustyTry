global:
  # The smarthost and SMTP sender used for mail notifications.
  smtp_smarthost: 'smtp.gmail.com:587'
  smtp_from: 'alerts@synup.com'
  smtp_auth_username: '{{ smtp_auth_username }}'
  smtp_auth_password: '{{ smtp_auth_password }}'
  # auth for Slack
  slack_api_url: '{{ slack_api_url }}'

# The directory from which notification templates are read.
templates:
- '/etc/alertmanager/template/*.tmpl'

# The root route on which each incoming alert enters.
route:
  # The labels by which incoming alerts are grouped together. For example,
  # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
  # be batched into a single group.
  group_by: ['alertname', 'cluster', 'service']

  # When a new group of alerts is created by an incoming alert, wait at
  # least 'group_wait' to send the initial notification.
  # This way ensures that you get multiple alerts for the same group that start
  # firing shortly after another are batched together on the first
  # notification.
  group_wait: 30s

  # When the first notification was sent, wait 'group_interval' to send a batch
  # of new alerts that started firing for that group.
  group_interval: 5m

  # If an alert has successfully been sent, wait 'repeat_interval' to
  # resend them.
  repeat_interval: 3h

  # A default receiver
  receiver: 'slack_alerts'
#  receiver: 'email_dev'

  # All the above attributes are inherited by all child routes and can
  # overwritten on each.

  # The child route trees.
  routes:
  # This routes performs a regular expression match on alert labels to
  # catch alerts that are related to a list of services.
#  - match:
#      severity: 'critical'
#    receiver: 'email_dev'

#  - match:
#      severity: 'warning'
#    receiver: 'slack_alerts'


# Inhibition rules allow to mute a set of alerts given that another alert is
# firing.
# We use this to mute any warning-level notifications if the same alert is
# already critical.
inhibit_rules:
- source_match:
    severity: 'critical'
  target_match:
    severity: 'warning'
  # Apply inhibition if the alertname is the same.
  equal: ['alertname', 'cluster', 'service']

- source_match:
    alertname: 'CPU_Threshold_Exceeded'
  target_match:
    alertname: 'Instance_DOWN'
  # Apply inhibition if the alertname is the same.
  equal: ['instance']



receivers:
#- name: 'email_dev'
#  email_configs:
#  - to: 'ops@example.com'

- name: 'slack_alerts'
  slack_configs:
  - send_resolved: true
    channel: '#alerts'
    text: "{{ .CommonAnnotations.description }}"
